name: Create SLSA File 2.0 - Gradle
on:
  - workflow_dispatch

permissions: read-all

env:
  GH_TOKEN: ${{ github.token }}
  ISSUE_REPOSITORY: ${{ github.repository }}
jobs:
  publish:
    env:
      MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    permissions:
      contents: write
      id-token: write
      actions: read   # For the entrypoint.
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build and install custom jarfile hashing plugin
        run : |
          cd plugin-gradle && chmod +x gradlew && ./gradlew clean publish && cd ..
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - name: Publish to the Maven Central Repository
        run: |
          # Retrieve project version and artifact id
          VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          ARTIFACTID=$(./gradlew properties -q | grep "rootProject: " | cut -d\' -f2)
          echo $VERSION
          echo $ARTIFACTID
          # Temp creation of *.intoto.sigstore for .jar files
          touch build/libs/$ARTIFACTID-$VERSION.jar.intoto.sigstore
          touch build/libs/$ARTIFACTID-$VERSION-sources.jar.intoto.sigstore
          touch build/libs/$ARTIFACTID-$VERSION-javadoc.jar.intoto.sigstore
          # End of temp creation of *.intoto.sigstore for .jar files
          # Run the gradle publish plugin
          ./gradlew publish --stacktrace
#          # Reset the environment variables add in the base provenance
#          FILES=slsa-attestations/test-java-project-$VERSION.jar.intoto.sigstore
#          TYPES=sigstore
#          CLASSIFIERS=jar.intoto
#          # Find all necessary built jar files and attach them to the enviornment variable deploy
#          for name in $(find ./ -name "test-java-project-$VERSION-*.jar")
#          do
#            TARGET=$(echo $name | rev | cut -d\- -f1 | rev)
#            FILES=$FILES,$name
#            TYPES=$TYPES,${TARGET##*.}
#            CLASSIFIERS=$CLASSIFIERS,${TARGET%.*}
#          done
#          # Find all generated provenance files and attach them the the envionrment variable for deploy
#          for name in $(find ./ -name "test-java-project-$VERSION-*.jar.intoto.sigstore")
#          do
#            TARGET=$(echo $name | rev | cut -d\- -f1 | rev)
#            FILES=$FILES,$name
#            TYPES=$TYPES",sigstore"
#            CLASSIFIERS=$CLASSIFIERS,${TARGET::-9}
#          done
#          # Sign and deploy the files to the ossrh remote repository
#          mvn validate jar:jar -Dfile=target/test-java-project-$VERSION.jar -Durl=https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/ -DrepositoryId=ossrh -Dfiles=$FILES -Dtypes=$TYPES -Dclassi>

